{"version":3,"sources":["api/OpenLibraryClient.js","images/no-book-cover-available.jpg","components/Book.js","components/BookList.js","components/BookShelf.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_DOMAIN","get","uri","params","a","url","stringify","fetch","cache","headers","Accept","response","json","findBooks","title","Book","cover_image","book","addToBookShelf","author_name","cover_i","length","src","alt","className","coverPlaceholder","join","onClick","BookList","loading","books","count","map","key","BookShelf","this","props","bookShelfBooks","Component","Search","onSubmit","onSearch","type","placeholder","defaultValue","query","onChange","onQueryChange","React","App","state","isFetching","numFound","setState","e","preventDefault","client","result","docs","value","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fbaa0ea.chunk.js","sourcesContent":["import { stringify } from 'query-string';\n\nexport const BASE_DOMAIN = 'openlibrary.org';\n\nconst get = async (uri, params) => {\n\tconst url = `https://${BASE_DOMAIN}${uri}?${stringify(params)}`;\n\n\tconst response = await fetch(url, {\n\t\tcache: 'no-cache',\n\t\theaders: {\n\t\t\tAccept: 'application/json'\n\t\t}\n\t});\n\n\treturn await response.json();\n};\n\nexport const findBooks = title => get('/search.json', { title });\n","export default __webpack_public_path__ + \"static/media/no-book-cover-available.19a0b711.jpg\";","import React from 'react';\nimport { BASE_DOMAIN } from '../api/OpenLibraryClient';\nimport coverPlaceholder from '../images/no-book-cover-available.jpg';\n\nconst Book = ({ book, addToBookShelf }) => {\n\tconst { title, author_name, cover_i = [] } = book;\n\tlet cover_image;\n\n\tif (cover_i.length == null && cover_i !== -1) {\n\t\tcover_image = <img src={`https://covers.${BASE_DOMAIN}/b/id/${cover_i}.jpg`} alt=\"cover\" />;\n\t}\n\n\treturn (\n\t\t<div className=\"book\">\n\t\t\t<p className=\"book-cover\">\n\t\t\t\t{cover_image ? cover_image : <img src={coverPlaceholder} alt=\"no cover\" />}\n\t\t\t</p>\n\t\t\t<div className=\"book-content\">\n\t\t\t\t<p className=\"book-title\">\n\t\t\t\t\t{title}\n\t\t\t\t</p>\n\t\t\t\t{author_name &&\n\t\t\t\t\t<p className=\"book-author\">\n\t\t\t\t\t\tby {author_name.join(', ')}\n\t\t\t\t\t</p>}\n\t\t\t</div>\n\t\t\t<footer className=\"book-footer\">\n\t\t\t\t<button onClick={() => addToBookShelf(book)}>Add Book</button>\n\t\t\t</footer>\n\t\t</div>\n\t);\n};\n\nexport default Book;\n","import React from 'react';\nimport Book from './Book';\n\nconst BookList = ({ addToBookShelf, loading = false, books = [], count = 0 }) => {\n\treturn (\n\t\t<section>\n\t\t\t<div className=\"flex-container\">\n\t\t\t\t{loading}\n\t\t\t\t{books.length > 0 &&\n\t\t\t\t\t<p>\n\t\t\t\t\t\tShowing <strong>{books.length}</strong> of <strong>{count}</strong> results.\n\t\t\t\t\t</p>}\n\t\t\t\t{books.map(book => <Book book={book} addToBookShelf={addToBookShelf} key={book.key} />)}\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default BookList;\n","import React, { Component } from 'react';\nimport Book from './Book';\n\nclass BookShelf extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<div className=\"flex-container book-added\">\n\t\t\t\t\t{this.props.bookShelfBooks.map(book => <Book book={book} key={book.key} />)}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nexport default BookShelf;\n","import React from 'react';\nclass Search extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<form onSubmit={this.props.onSearch}>\n\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Book Title\"\n\t\t\t\t\t\t\t\t\tdefaultValue={this.props.query}\n\t\t\t\t\t\t\t\t\tonChange={this.props.onQueryChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t\t<button type=\"submit\">Search</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nexport default Search;\n","import React, { Component, Fragment } from 'react';\nimport * as client from './api/OpenLibraryClient';\nimport BookList from './components/BookList';\nimport BookShelf from './components/BookShelf';\nimport Search from './components/Search';\n\nclass App extends Component {\n\tstate = { books: [], isFetching: false, query: '', numFound: 0, bookShelfBooks: [] };\n\n\taddToBookShelf = book => {\n\t\tthis.setState({\n\t\t\tbookShelfBooks: [...this.state.bookShelfBooks, book]\n\t\t});\n\t};\n\n\tonSearch = async e => {\n\t\te.preventDefault();\n\t\tthis.setState({ isFetching: true, books: [] });\n\t\tconst result = await client.findBooks(this.state.query);\n\t\tconst { docs = [], numFound = 0 } = result;\n\t\tthis.setState({ books: docs, isFetching: false, numFound });\n\t};\n\n\tonQueryChange = ({ target: { value } }) => {\n\t\tthis.setState({ query: value });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<h1>Fictional Goggles</h1>\n\t\t\t\t\t\t<h2>Open Library book search</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<BookShelf bookShelfBooks={this.state.bookShelfBooks} />\n\t\t\t\t<Search onQueryChange={this.onQueryChange} onSearch={this.onSearch} query={this.state.query} />\n\t\t\t\t<BookList\n\t\t\t\t\taddToBookShelf={this.addToBookShelf}\n\t\t\t\t\tloading={this.state.isFetching}\n\t\t\t\t\tbooks={this.state.books}\n\t\t\t\t\tcount={this.state.numFound}\n\t\t\t\t/>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}